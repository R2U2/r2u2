STRUCT
  Request: { state: int; time_active: float; };
  Arbiter: { ReqSet: set<Request>; };

INPUT
  st0, st1, st2, st3: int;
  ta0, ta1, ta2, ta3: float;

DEFINE
  WT := 0; GR := 1; RJ := 2; -- WAIT, GRANT, REJECT 

  rq0 := Request(st0, ta0); rq1 := Request(st1, ta1); 
  rq2 := Request(st2, ta2); rq3 := Request(st3, ta3); 

  Arb0 := Arbiter({rq0, rq1}); Arb1 := Arbiter({rq2, rq3});
  ArbSet := {Arb0, Arb1};

FTSPEC
  (rq0.time_active - rq1.time_active) < 10.0 &&
  (rq1.time_active - rq0.time_active) < 10.0;

  foreach(arb: ArbSet)(
   foreach(rq: arb.ReqSet)(
    (rq.state == WT) U[0,10] (rq.state == GR || rq.state == RJ)
   )
  );