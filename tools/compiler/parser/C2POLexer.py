# Generated from C2PO.g by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,74,460,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,1,
        0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,7,1,
        7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,
        14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,3,14,199,8,
        14,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,
        17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,
        19,1,20,1,20,1,21,1,21,1,21,3,21,232,8,21,1,22,1,22,1,22,3,22,237,
        8,22,1,23,1,23,1,23,1,23,3,23,243,8,23,1,24,1,24,1,24,3,24,248,8,
        24,1,25,1,25,1,25,1,25,3,25,254,8,25,1,26,1,26,1,26,1,26,1,26,1,
        26,1,26,1,26,1,26,3,26,265,8,26,1,27,1,27,1,27,1,27,1,27,1,27,1,
        27,1,27,1,27,1,27,1,27,3,27,278,8,27,1,28,1,28,1,29,1,29,1,30,1,
        30,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,1,34,1,34,1,34,1,35,1,
        35,1,35,3,35,300,8,35,1,36,1,36,1,36,3,36,305,8,36,1,37,1,37,1,37,
        3,37,310,8,37,1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,
        1,43,1,43,1,44,1,44,1,45,1,45,1,45,1,46,1,46,1,47,1,47,1,47,1,47,
        3,47,335,8,47,1,48,3,48,338,8,48,1,49,3,49,341,8,49,1,50,1,50,1,
        51,3,51,346,8,51,1,52,3,52,349,8,52,1,53,3,53,352,8,53,1,54,3,54,
        355,8,54,1,55,3,55,358,8,55,1,56,1,56,1,56,1,56,1,56,1,56,1,56,3,
        56,367,8,56,1,57,1,57,1,57,1,57,1,57,1,57,1,57,3,57,376,8,57,1,58,
        1,58,1,59,1,59,1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,
        1,65,1,65,1,66,1,66,1,67,1,67,1,68,1,68,1,69,1,69,1,69,5,69,403,
        8,69,10,69,12,69,406,9,69,1,70,3,70,409,8,70,1,70,4,70,412,8,70,
        11,70,12,70,413,1,70,1,70,4,70,418,8,70,11,70,12,70,419,1,71,3,71,
        423,8,71,1,71,1,71,5,71,427,8,71,10,71,12,71,430,9,71,1,71,3,71,
        433,8,71,1,72,1,72,1,73,1,73,1,74,1,74,1,75,1,75,1,76,1,76,1,76,
        1,76,5,76,447,8,76,10,76,12,76,450,9,76,1,76,1,76,1,77,4,77,455,
        8,77,11,77,12,77,456,1,77,1,77,0,0,78,1,1,3,2,5,3,7,4,9,5,11,6,13,
        7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,
        59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,
        81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,
        51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,
        121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,
        70,141,71,143,72,145,0,147,0,149,0,151,0,153,73,155,74,1,0,17,2,
        0,33,33,172,172,3,0,42,42,8226,8226,8901,8901,2,0,47,47,247,247,
        3,0,71,71,9633,9633,120022,120022,5,0,70,70,8900,8900,9674,9674,
        9826,9826,120021,120021,2,0,88,88,9675,9675,2,0,83,83,120034,120034,
        2,0,79,79,120030,120030,2,0,85,85,120036,120036,2,0,82,82,120033,
        120033,2,0,72,72,120023,120023,1,0,45,45,1,0,48,57,1,0,49,57,3,0,
        65,90,95,95,97,122,2,0,10,10,13,13,3,0,9,10,13,13,32,32,482,0,1,
        1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,
        0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,
        0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,
        0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,
        0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,
        0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,
        0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,
        0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,
        0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,
        0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,
        0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,
        111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,
        0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,
        1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,
        0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,153,1,0,0,0,0,155,1,
        0,0,0,1,157,1,0,0,0,3,159,1,0,0,0,5,161,1,0,0,0,7,163,1,0,0,0,9,
        165,1,0,0,0,11,167,1,0,0,0,13,169,1,0,0,0,15,172,1,0,0,0,17,174,
        1,0,0,0,19,176,1,0,0,0,21,178,1,0,0,0,23,180,1,0,0,0,25,182,1,0,
        0,0,27,184,1,0,0,0,29,198,1,0,0,0,31,200,1,0,0,0,33,204,1,0,0,0,
        35,211,1,0,0,0,37,216,1,0,0,0,39,222,1,0,0,0,41,226,1,0,0,0,43,231,
        1,0,0,0,45,236,1,0,0,0,47,242,1,0,0,0,49,247,1,0,0,0,51,253,1,0,
        0,0,53,264,1,0,0,0,55,277,1,0,0,0,57,279,1,0,0,0,59,281,1,0,0,0,
        61,283,1,0,0,0,63,285,1,0,0,0,65,287,1,0,0,0,67,290,1,0,0,0,69,293,
        1,0,0,0,71,299,1,0,0,0,73,304,1,0,0,0,75,309,1,0,0,0,77,311,1,0,
        0,0,79,313,1,0,0,0,81,315,1,0,0,0,83,317,1,0,0,0,85,319,1,0,0,0,
        87,321,1,0,0,0,89,323,1,0,0,0,91,325,1,0,0,0,93,328,1,0,0,0,95,334,
        1,0,0,0,97,337,1,0,0,0,99,340,1,0,0,0,101,342,1,0,0,0,103,345,1,
        0,0,0,105,348,1,0,0,0,107,351,1,0,0,0,109,354,1,0,0,0,111,357,1,
        0,0,0,113,366,1,0,0,0,115,375,1,0,0,0,117,377,1,0,0,0,119,379,1,
        0,0,0,121,381,1,0,0,0,123,383,1,0,0,0,125,385,1,0,0,0,127,387,1,
        0,0,0,129,389,1,0,0,0,131,391,1,0,0,0,133,393,1,0,0,0,135,395,1,
        0,0,0,137,397,1,0,0,0,139,399,1,0,0,0,141,408,1,0,0,0,143,432,1,
        0,0,0,145,434,1,0,0,0,147,436,1,0,0,0,149,438,1,0,0,0,151,440,1,
        0,0,0,153,442,1,0,0,0,155,454,1,0,0,0,157,158,5,44,0,0,158,2,1,0,
        0,0,159,160,5,58,0,0,160,4,1,0,0,0,161,162,5,59,0,0,162,6,1,0,0,
        0,163,164,5,10216,0,0,164,8,1,0,0,0,165,166,5,10217,0,0,166,10,1,
        0,0,0,167,168,5,61,0,0,168,12,1,0,0,0,169,170,5,61,0,0,170,171,5,
        62,0,0,171,14,1,0,0,0,172,173,5,40,0,0,173,16,1,0,0,0,174,175,5,
        41,0,0,175,18,1,0,0,0,176,177,5,63,0,0,177,20,1,0,0,0,178,179,5,
        123,0,0,179,22,1,0,0,0,180,181,5,125,0,0,181,24,1,0,0,0,182,183,
        5,91,0,0,183,26,1,0,0,0,184,185,5,93,0,0,185,28,1,0,0,0,186,187,
        5,98,0,0,187,188,5,111,0,0,188,189,5,111,0,0,189,199,5,108,0,0,190,
        191,5,105,0,0,191,192,5,110,0,0,192,199,5,116,0,0,193,194,5,102,
        0,0,194,195,5,108,0,0,195,196,5,111,0,0,196,197,5,97,0,0,197,199,
        5,116,0,0,198,186,1,0,0,0,198,190,1,0,0,0,198,193,1,0,0,0,199,30,
        1,0,0,0,200,201,5,86,0,0,201,202,5,65,0,0,202,203,5,82,0,0,203,32,
        1,0,0,0,204,205,5,68,0,0,205,206,5,69,0,0,206,207,5,70,0,0,207,208,
        5,73,0,0,208,209,5,78,0,0,209,210,5,69,0,0,210,34,1,0,0,0,211,212,
        5,83,0,0,212,213,5,80,0,0,213,214,5,69,0,0,214,215,5,67,0,0,215,
        36,1,0,0,0,216,217,5,79,0,0,217,218,5,114,0,0,218,219,5,100,0,0,
        219,220,5,101,0,0,220,221,5,114,0,0,221,38,1,0,0,0,222,223,5,115,
        0,0,223,224,5,101,0,0,224,225,5,116,0,0,225,40,1,0,0,0,226,227,7,
        0,0,0,227,42,1,0,0,0,228,229,5,38,0,0,229,232,5,38,0,0,230,232,5,
        8743,0,0,231,228,1,0,0,0,231,230,1,0,0,0,232,44,1,0,0,0,233,234,
        5,124,0,0,234,237,5,124,0,0,235,237,5,8744,0,0,236,233,1,0,0,0,236,
        235,1,0,0,0,237,46,1,0,0,0,238,239,5,88,0,0,239,240,5,79,0,0,240,
        243,5,82,0,0,241,243,5,8853,0,0,242,238,1,0,0,0,242,241,1,0,0,0,
        243,48,1,0,0,0,244,245,5,45,0,0,245,248,5,62,0,0,246,248,5,8594,
        0,0,247,244,1,0,0,0,247,246,1,0,0,0,248,50,1,0,0,0,249,250,5,60,
        0,0,250,251,5,45,0,0,251,254,5,62,0,0,252,254,5,8596,0,0,253,249,
        1,0,0,0,253,252,1,0,0,0,254,52,1,0,0,0,255,256,5,84,0,0,256,257,
        5,82,0,0,257,258,5,85,0,0,258,265,5,69,0,0,259,260,5,116,0,0,260,
        261,5,114,0,0,261,262,5,117,0,0,262,265,5,101,0,0,263,265,5,8868,
        0,0,264,255,1,0,0,0,264,259,1,0,0,0,264,263,1,0,0,0,265,54,1,0,0,
        0,266,267,5,70,0,0,267,268,5,65,0,0,268,269,5,76,0,0,269,270,5,83,
        0,0,270,278,5,69,0,0,271,272,5,102,0,0,272,273,5,97,0,0,273,274,
        5,108,0,0,274,275,5,115,0,0,275,278,5,101,0,0,276,278,5,8869,0,0,
        277,266,1,0,0,0,277,271,1,0,0,0,277,276,1,0,0,0,278,56,1,0,0,0,279,
        280,5,126,0,0,280,58,1,0,0,0,281,282,5,38,0,0,282,60,1,0,0,0,283,
        284,5,124,0,0,284,62,1,0,0,0,285,286,5,94,0,0,286,64,1,0,0,0,287,
        288,5,60,0,0,288,289,5,60,0,0,289,66,1,0,0,0,290,291,5,62,0,0,291,
        292,5,62,0,0,292,68,1,0,0,0,293,294,5,61,0,0,294,295,5,61,0,0,295,
        70,1,0,0,0,296,297,5,33,0,0,297,300,5,61,0,0,298,300,5,8800,0,0,
        299,296,1,0,0,0,299,298,1,0,0,0,300,72,1,0,0,0,301,302,5,62,0,0,
        302,305,5,61,0,0,303,305,5,8805,0,0,304,301,1,0,0,0,304,303,1,0,
        0,0,305,74,1,0,0,0,306,307,5,60,0,0,307,310,5,61,0,0,308,310,5,8804,
        0,0,309,306,1,0,0,0,309,308,1,0,0,0,310,76,1,0,0,0,311,312,5,62,
        0,0,312,78,1,0,0,0,313,314,5,60,0,0,314,80,1,0,0,0,315,316,5,43,
        0,0,316,82,1,0,0,0,317,318,5,45,0,0,318,84,1,0,0,0,319,320,7,1,0,
        0,320,86,1,0,0,0,321,322,7,2,0,0,322,88,1,0,0,0,323,324,5,37,0,0,
        324,90,1,0,0,0,325,326,5,42,0,0,326,327,5,42,0,0,327,92,1,0,0,0,
        328,329,5,8730,0,0,329,94,1,0,0,0,330,331,5,43,0,0,331,332,5,47,
        0,0,332,335,5,45,0,0,333,335,5,177,0,0,334,330,1,0,0,0,334,333,1,
        0,0,0,335,96,1,0,0,0,336,338,7,3,0,0,337,336,1,0,0,0,338,98,1,0,
        0,0,339,341,7,4,0,0,340,339,1,0,0,0,341,100,1,0,0,0,342,343,7,5,
        0,0,343,102,1,0,0,0,344,346,7,6,0,0,345,344,1,0,0,0,346,104,1,0,
        0,0,347,349,7,7,0,0,348,347,1,0,0,0,349,106,1,0,0,0,350,352,7,8,
        0,0,351,350,1,0,0,0,352,108,1,0,0,0,353,355,7,9,0,0,354,353,1,0,
        0,0,355,110,1,0,0,0,356,358,7,10,0,0,357,356,1,0,0,0,358,112,1,0,
        0,0,359,360,5,70,0,0,360,361,5,79,0,0,361,362,5,82,0,0,362,363,5,
        65,0,0,363,364,5,76,0,0,364,367,5,76,0,0,365,367,5,8704,0,0,366,
        359,1,0,0,0,366,365,1,0,0,0,367,114,1,0,0,0,368,369,5,69,0,0,369,
        370,5,88,0,0,370,371,5,73,0,0,371,372,5,83,0,0,372,373,5,84,0,0,
        373,376,5,83,0,0,374,376,5,8707,0,0,375,368,1,0,0,0,375,374,1,0,
        0,0,376,116,1,0,0,0,377,378,5,8709,0,0,378,118,1,0,0,0,379,380,5,
        8712,0,0,380,120,1,0,0,0,381,382,5,8834,0,0,382,122,1,0,0,0,383,
        384,5,8838,0,0,384,124,1,0,0,0,385,386,5,8721,0,0,386,126,1,0,0,
        0,387,388,5,8719,0,0,388,128,1,0,0,0,389,390,5,8899,0,0,390,130,
        1,0,0,0,391,392,5,8898,0,0,392,132,1,0,0,0,393,394,5,8896,0,0,394,
        134,1,0,0,0,395,396,5,8897,0,0,396,136,1,0,0,0,397,398,5,215,0,0,
        398,138,1,0,0,0,399,404,3,151,75,0,400,403,3,151,75,0,401,403,3,
        147,73,0,402,400,1,0,0,0,402,401,1,0,0,0,403,406,1,0,0,0,404,402,
        1,0,0,0,404,405,1,0,0,0,405,140,1,0,0,0,406,404,1,0,0,0,407,409,
        3,145,72,0,408,407,1,0,0,0,408,409,1,0,0,0,409,411,1,0,0,0,410,412,
        3,147,73,0,411,410,1,0,0,0,412,413,1,0,0,0,413,411,1,0,0,0,413,414,
        1,0,0,0,414,415,1,0,0,0,415,417,5,46,0,0,416,418,3,147,73,0,417,
        416,1,0,0,0,418,419,1,0,0,0,419,417,1,0,0,0,419,420,1,0,0,0,420,
        142,1,0,0,0,421,423,3,145,72,0,422,421,1,0,0,0,422,423,1,0,0,0,423,
        424,1,0,0,0,424,428,3,149,74,0,425,427,3,147,73,0,426,425,1,0,0,
        0,427,430,1,0,0,0,428,426,1,0,0,0,428,429,1,0,0,0,429,433,1,0,0,
        0,430,428,1,0,0,0,431,433,5,48,0,0,432,422,1,0,0,0,432,431,1,0,0,
        0,433,144,1,0,0,0,434,435,7,11,0,0,435,146,1,0,0,0,436,437,7,12,
        0,0,437,148,1,0,0,0,438,439,7,13,0,0,439,150,1,0,0,0,440,441,7,14,
        0,0,441,152,1,0,0,0,442,443,5,45,0,0,443,444,5,45,0,0,444,448,1,
        0,0,0,445,447,8,15,0,0,446,445,1,0,0,0,447,450,1,0,0,0,448,446,1,
        0,0,0,448,449,1,0,0,0,449,451,1,0,0,0,450,448,1,0,0,0,451,452,6,
        76,0,0,452,154,1,0,0,0,453,455,7,16,0,0,454,453,1,0,0,0,455,456,
        1,0,0,0,456,454,1,0,0,0,456,457,1,0,0,0,457,458,1,0,0,0,458,459,
        6,77,1,0,459,156,1,0,0,0,32,0,198,231,236,242,247,253,264,277,299,
        304,309,334,337,340,345,348,351,354,357,366,375,402,404,408,413,
        419,422,428,432,448,456,2,6,0,0,0,1,0
    ]

class C2POLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    BASE_TYPE = 15
    KW_VAR = 16
    KW_DEF = 17
    KW_SPEC = 18
    KW_ORDER = 19
    KW_SET = 20
    LOG_NEG = 21
    LOG_AND = 22
    LOG_OR = 23
    LOG_XOR = 24
    LOG_IMPL = 25
    LOG_IFF = 26
    TRUE = 27
    FALSE = 28
    BW_NEG = 29
    BW_AND = 30
    BW_OR = 31
    BW_XOR = 32
    BW_SHIFT_LEFT = 33
    BW_SHIFT_RIGHT = 34
    REL_EQ = 35
    REL_NEQ = 36
    REL_GTE = 37
    REL_LTE = 38
    REL_GT = 39
    REL_LT = 40
    ARITH_ADD = 41
    ARITH_SUB = 42
    ARITH_MUL = 43
    ARITH_DIV = 44
    ARITH_MOD = 45
    ARITH_POW = 46
    ARITH_SQRT = 47
    ARITH_PM = 48
    TL_GLOBAL = 49
    TL_FUTURE = 50
    TL_NEXT = 51
    TL_SINCE = 52
    TL_ONCE = 53
    TL_UNTIL = 54
    TL_RELEASE = 55
    TL_HISTORICAL = 56
    FO_FORALL = 57
    FO_EXISTS = 58
    SW_EMPTY_SET = 59
    SW_MEMBER = 60
    SW_SUBSET = 61
    SW_SUBSETEQ = 62
    SW_SUM = 63
    SW_PROD = 64
    SW_UNION = 65
    SW_INTERSECTION = 66
    SW_AND = 67
    SW_OR = 68
    SW_CTPROD = 69
    IDENTIFIER = 70
    FLOAT = 71
    INT = 72
    COMMENT = 73
    WS = 74

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "','", "':'", "';'", "'\\u27E8'", "'\\u27E9'", "'='", "'=>'", 
            "'('", "')'", "'?'", "'{'", "'}'", "'['", "']'", "'VAR'", "'DEFINE'", 
            "'SPEC'", "'Order'", "'set'", "'~'", "'&'", "'|'", "'^'", "'<<'", 
            "'>>'", "'=='", "'>'", "'<'", "'+'", "'-'", "'%'", "'**'", "'\\u221A'", 
            "'\\u2205'", "'\\u2208'", "'\\u2282'", "'\\u2286'", "'\\u2211'", 
            "'\\u220F'", "'\\u22C3'", "'\\u22C2'", "'\\u22C0'", "'\\u22C1'", 
            "'\\u00D7'" ]

    symbolicNames = [ "<INVALID>",
            "BASE_TYPE", "KW_VAR", "KW_DEF", "KW_SPEC", "KW_ORDER", "KW_SET", 
            "LOG_NEG", "LOG_AND", "LOG_OR", "LOG_XOR", "LOG_IMPL", "LOG_IFF", 
            "TRUE", "FALSE", "BW_NEG", "BW_AND", "BW_OR", "BW_XOR", "BW_SHIFT_LEFT", 
            "BW_SHIFT_RIGHT", "REL_EQ", "REL_NEQ", "REL_GTE", "REL_LTE", 
            "REL_GT", "REL_LT", "ARITH_ADD", "ARITH_SUB", "ARITH_MUL", "ARITH_DIV", 
            "ARITH_MOD", "ARITH_POW", "ARITH_SQRT", "ARITH_PM", "TL_GLOBAL", 
            "TL_FUTURE", "TL_NEXT", "TL_SINCE", "TL_ONCE", "TL_UNTIL", "TL_RELEASE", 
            "TL_HISTORICAL", "FO_FORALL", "FO_EXISTS", "SW_EMPTY_SET", "SW_MEMBER", 
            "SW_SUBSET", "SW_SUBSETEQ", "SW_SUM", "SW_PROD", "SW_UNION", 
            "SW_INTERSECTION", "SW_AND", "SW_OR", "SW_CTPROD", "IDENTIFIER", 
            "FLOAT", "INT", "COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "BASE_TYPE", "KW_VAR", "KW_DEF", "KW_SPEC", "KW_ORDER", 
                  "KW_SET", "LOG_NEG", "LOG_AND", "LOG_OR", "LOG_XOR", "LOG_IMPL", 
                  "LOG_IFF", "TRUE", "FALSE", "BW_NEG", "BW_AND", "BW_OR", 
                  "BW_XOR", "BW_SHIFT_LEFT", "BW_SHIFT_RIGHT", "REL_EQ", 
                  "REL_NEQ", "REL_GTE", "REL_LTE", "REL_GT", "REL_LT", "ARITH_ADD", 
                  "ARITH_SUB", "ARITH_MUL", "ARITH_DIV", "ARITH_MOD", "ARITH_POW", 
                  "ARITH_SQRT", "ARITH_PM", "TL_GLOBAL", "TL_FUTURE", "TL_NEXT", 
                  "TL_SINCE", "TL_ONCE", "TL_UNTIL", "TL_RELEASE", "TL_HISTORICAL", 
                  "FO_FORALL", "FO_EXISTS", "SW_EMPTY_SET", "SW_MEMBER", 
                  "SW_SUBSET", "SW_SUBSETEQ", "SW_SUM", "SW_PROD", "SW_UNION", 
                  "SW_INTERSECTION", "SW_AND", "SW_OR", "SW_CTPROD", "IDENTIFIER", 
                  "FLOAT", "INT", "SIGN", "DIGIT", "NONZERODIGIT", "LETTER", 
                  "COMMENT", "WS" ]

    grammarFileName = "C2PO.g"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


