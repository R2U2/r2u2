# Generated from C2PO.g by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,72,450,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,1,0,1,0,1,1,1,1,1,2,1,
        2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,
        10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,
        14,1,14,1,14,1,14,1,14,1,14,1,14,3,14,195,8,14,1,15,1,15,1,15,1,
        15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,
        18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,20,1,20,1,21,1,
        21,1,21,3,21,228,8,21,1,22,1,22,1,22,3,22,233,8,22,1,23,1,23,1,23,
        1,23,3,23,239,8,23,1,24,1,24,1,24,3,24,244,8,24,1,25,1,25,1,25,1,
        25,3,25,250,8,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,3,
        26,261,8,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,
        27,3,27,274,8,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,
        32,1,32,1,33,1,33,1,33,3,33,290,8,33,1,34,1,34,1,34,3,34,295,8,34,
        1,35,1,35,1,35,3,35,300,8,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,
        1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,45,
        1,45,1,45,1,45,3,45,325,8,45,1,46,3,46,328,8,46,1,47,3,47,331,8,
        47,1,48,1,48,1,49,3,49,336,8,49,1,50,3,50,339,8,50,1,51,3,51,342,
        8,51,1,52,3,52,345,8,52,1,53,3,53,348,8,53,1,54,1,54,1,54,1,54,1,
        54,1,54,1,54,3,54,357,8,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,3,
        55,366,8,55,1,56,1,56,1,57,1,57,1,58,1,58,1,59,1,59,1,60,1,60,1,
        61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,65,1,65,1,66,1,66,1,67,1,
        67,1,67,5,67,393,8,67,10,67,12,67,396,9,67,1,68,3,68,399,8,68,1,
        68,4,68,402,8,68,11,68,12,68,403,1,68,1,68,4,68,408,8,68,11,68,12,
        68,409,1,69,3,69,413,8,69,1,69,1,69,5,69,417,8,69,10,69,12,69,420,
        9,69,1,69,3,69,423,8,69,1,70,1,70,1,71,1,71,1,72,1,72,1,73,1,73,
        1,74,1,74,1,74,1,74,5,74,437,8,74,10,74,12,74,440,9,74,1,74,1,74,
        1,75,4,75,445,8,75,11,75,12,75,446,1,75,1,75,0,0,76,1,1,3,2,5,3,
        7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,
        31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,
        53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,
        75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,
        97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,
        58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,
        135,68,137,69,139,70,141,0,143,0,145,0,147,0,149,71,151,72,1,0,17,
        2,0,33,33,172,172,3,0,42,42,8226,8226,8901,8901,2,0,47,47,247,247,
        3,0,71,71,9633,9633,120022,120022,5,0,70,70,8900,8900,9674,9674,
        9826,9826,120021,120021,2,0,88,88,9675,9675,2,0,83,83,120034,120034,
        2,0,79,79,120030,120030,2,0,85,85,120036,120036,2,0,82,82,120033,
        120033,2,0,72,72,120023,120023,1,0,45,45,1,0,48,57,1,0,49,57,3,0,
        65,90,95,95,97,122,2,0,10,10,13,13,3,0,9,10,13,13,32,32,472,0,1,
        1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,
        0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,
        0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,
        0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,
        0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,
        0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,
        0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,
        0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,
        0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,
        0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,
        0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,
        111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,
        0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,
        1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,
        0,139,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,1,153,1,0,0,0,3,155,1,
        0,0,0,5,157,1,0,0,0,7,159,1,0,0,0,9,161,1,0,0,0,11,163,1,0,0,0,13,
        165,1,0,0,0,15,168,1,0,0,0,17,170,1,0,0,0,19,172,1,0,0,0,21,174,
        1,0,0,0,23,176,1,0,0,0,25,178,1,0,0,0,27,180,1,0,0,0,29,194,1,0,
        0,0,31,196,1,0,0,0,33,200,1,0,0,0,35,207,1,0,0,0,37,212,1,0,0,0,
        39,218,1,0,0,0,41,222,1,0,0,0,43,227,1,0,0,0,45,232,1,0,0,0,47,238,
        1,0,0,0,49,243,1,0,0,0,51,249,1,0,0,0,53,260,1,0,0,0,55,273,1,0,
        0,0,57,275,1,0,0,0,59,277,1,0,0,0,61,279,1,0,0,0,63,281,1,0,0,0,
        65,283,1,0,0,0,67,289,1,0,0,0,69,294,1,0,0,0,71,299,1,0,0,0,73,301,
        1,0,0,0,75,303,1,0,0,0,77,305,1,0,0,0,79,307,1,0,0,0,81,309,1,0,
        0,0,83,311,1,0,0,0,85,313,1,0,0,0,87,315,1,0,0,0,89,318,1,0,0,0,
        91,324,1,0,0,0,93,327,1,0,0,0,95,330,1,0,0,0,97,332,1,0,0,0,99,335,
        1,0,0,0,101,338,1,0,0,0,103,341,1,0,0,0,105,344,1,0,0,0,107,347,
        1,0,0,0,109,356,1,0,0,0,111,365,1,0,0,0,113,367,1,0,0,0,115,369,
        1,0,0,0,117,371,1,0,0,0,119,373,1,0,0,0,121,375,1,0,0,0,123,377,
        1,0,0,0,125,379,1,0,0,0,127,381,1,0,0,0,129,383,1,0,0,0,131,385,
        1,0,0,0,133,387,1,0,0,0,135,389,1,0,0,0,137,398,1,0,0,0,139,422,
        1,0,0,0,141,424,1,0,0,0,143,426,1,0,0,0,145,428,1,0,0,0,147,430,
        1,0,0,0,149,432,1,0,0,0,151,444,1,0,0,0,153,154,5,44,0,0,154,2,1,
        0,0,0,155,156,5,58,0,0,156,4,1,0,0,0,157,158,5,59,0,0,158,6,1,0,
        0,0,159,160,5,10216,0,0,160,8,1,0,0,0,161,162,5,10217,0,0,162,10,
        1,0,0,0,163,164,5,61,0,0,164,12,1,0,0,0,165,166,5,61,0,0,166,167,
        5,62,0,0,167,14,1,0,0,0,168,169,5,40,0,0,169,16,1,0,0,0,170,171,
        5,41,0,0,171,18,1,0,0,0,172,173,5,63,0,0,173,20,1,0,0,0,174,175,
        5,123,0,0,175,22,1,0,0,0,176,177,5,125,0,0,177,24,1,0,0,0,178,179,
        5,91,0,0,179,26,1,0,0,0,180,181,5,93,0,0,181,28,1,0,0,0,182,183,
        5,98,0,0,183,184,5,111,0,0,184,185,5,111,0,0,185,195,5,108,0,0,186,
        187,5,105,0,0,187,188,5,110,0,0,188,195,5,116,0,0,189,190,5,102,
        0,0,190,191,5,108,0,0,191,192,5,111,0,0,192,193,5,97,0,0,193,195,
        5,116,0,0,194,182,1,0,0,0,194,186,1,0,0,0,194,189,1,0,0,0,195,30,
        1,0,0,0,196,197,5,86,0,0,197,198,5,65,0,0,198,199,5,82,0,0,199,32,
        1,0,0,0,200,201,5,68,0,0,201,202,5,69,0,0,202,203,5,70,0,0,203,204,
        5,73,0,0,204,205,5,78,0,0,205,206,5,69,0,0,206,34,1,0,0,0,207,208,
        5,83,0,0,208,209,5,80,0,0,209,210,5,69,0,0,210,211,5,67,0,0,211,
        36,1,0,0,0,212,213,5,79,0,0,213,214,5,114,0,0,214,215,5,100,0,0,
        215,216,5,101,0,0,216,217,5,114,0,0,217,38,1,0,0,0,218,219,5,115,
        0,0,219,220,5,101,0,0,220,221,5,116,0,0,221,40,1,0,0,0,222,223,7,
        0,0,0,223,42,1,0,0,0,224,225,5,38,0,0,225,228,5,38,0,0,226,228,5,
        8743,0,0,227,224,1,0,0,0,227,226,1,0,0,0,228,44,1,0,0,0,229,230,
        5,124,0,0,230,233,5,124,0,0,231,233,5,8744,0,0,232,229,1,0,0,0,232,
        231,1,0,0,0,233,46,1,0,0,0,234,235,5,88,0,0,235,236,5,79,0,0,236,
        239,5,82,0,0,237,239,5,8853,0,0,238,234,1,0,0,0,238,237,1,0,0,0,
        239,48,1,0,0,0,240,241,5,45,0,0,241,244,5,62,0,0,242,244,5,8594,
        0,0,243,240,1,0,0,0,243,242,1,0,0,0,244,50,1,0,0,0,245,246,5,60,
        0,0,246,247,5,45,0,0,247,250,5,62,0,0,248,250,5,8596,0,0,249,245,
        1,0,0,0,249,248,1,0,0,0,250,52,1,0,0,0,251,252,5,84,0,0,252,253,
        5,82,0,0,253,254,5,85,0,0,254,261,5,69,0,0,255,256,5,116,0,0,256,
        257,5,114,0,0,257,258,5,117,0,0,258,261,5,101,0,0,259,261,5,8868,
        0,0,260,251,1,0,0,0,260,255,1,0,0,0,260,259,1,0,0,0,261,54,1,0,0,
        0,262,263,5,70,0,0,263,264,5,65,0,0,264,265,5,76,0,0,265,266,5,83,
        0,0,266,274,5,69,0,0,267,268,5,102,0,0,268,269,5,97,0,0,269,270,
        5,108,0,0,270,271,5,115,0,0,271,274,5,101,0,0,272,274,5,8869,0,0,
        273,262,1,0,0,0,273,267,1,0,0,0,273,272,1,0,0,0,274,56,1,0,0,0,275,
        276,5,126,0,0,276,58,1,0,0,0,277,278,5,38,0,0,278,60,1,0,0,0,279,
        280,5,124,0,0,280,62,1,0,0,0,281,282,5,94,0,0,282,64,1,0,0,0,283,
        284,5,61,0,0,284,285,5,61,0,0,285,66,1,0,0,0,286,287,5,33,0,0,287,
        290,5,61,0,0,288,290,5,8800,0,0,289,286,1,0,0,0,289,288,1,0,0,0,
        290,68,1,0,0,0,291,292,5,62,0,0,292,295,5,61,0,0,293,295,5,8805,
        0,0,294,291,1,0,0,0,294,293,1,0,0,0,295,70,1,0,0,0,296,297,5,60,
        0,0,297,300,5,61,0,0,298,300,5,8804,0,0,299,296,1,0,0,0,299,298,
        1,0,0,0,300,72,1,0,0,0,301,302,5,62,0,0,302,74,1,0,0,0,303,304,5,
        60,0,0,304,76,1,0,0,0,305,306,5,43,0,0,306,78,1,0,0,0,307,308,5,
        45,0,0,308,80,1,0,0,0,309,310,7,1,0,0,310,82,1,0,0,0,311,312,7,2,
        0,0,312,84,1,0,0,0,313,314,5,37,0,0,314,86,1,0,0,0,315,316,5,42,
        0,0,316,317,5,42,0,0,317,88,1,0,0,0,318,319,5,8730,0,0,319,90,1,
        0,0,0,320,321,5,43,0,0,321,322,5,47,0,0,322,325,5,45,0,0,323,325,
        5,177,0,0,324,320,1,0,0,0,324,323,1,0,0,0,325,92,1,0,0,0,326,328,
        7,3,0,0,327,326,1,0,0,0,328,94,1,0,0,0,329,331,7,4,0,0,330,329,1,
        0,0,0,331,96,1,0,0,0,332,333,7,5,0,0,333,98,1,0,0,0,334,336,7,6,
        0,0,335,334,1,0,0,0,336,100,1,0,0,0,337,339,7,7,0,0,338,337,1,0,
        0,0,339,102,1,0,0,0,340,342,7,8,0,0,341,340,1,0,0,0,342,104,1,0,
        0,0,343,345,7,9,0,0,344,343,1,0,0,0,345,106,1,0,0,0,346,348,7,10,
        0,0,347,346,1,0,0,0,348,108,1,0,0,0,349,350,5,70,0,0,350,351,5,79,
        0,0,351,352,5,82,0,0,352,353,5,65,0,0,353,354,5,76,0,0,354,357,5,
        76,0,0,355,357,5,8704,0,0,356,349,1,0,0,0,356,355,1,0,0,0,357,110,
        1,0,0,0,358,359,5,69,0,0,359,360,5,88,0,0,360,361,5,73,0,0,361,362,
        5,83,0,0,362,363,5,84,0,0,363,366,5,83,0,0,364,366,5,8707,0,0,365,
        358,1,0,0,0,365,364,1,0,0,0,366,112,1,0,0,0,367,368,5,8709,0,0,368,
        114,1,0,0,0,369,370,5,8712,0,0,370,116,1,0,0,0,371,372,5,8834,0,
        0,372,118,1,0,0,0,373,374,5,8838,0,0,374,120,1,0,0,0,375,376,5,8721,
        0,0,376,122,1,0,0,0,377,378,5,8719,0,0,378,124,1,0,0,0,379,380,5,
        8899,0,0,380,126,1,0,0,0,381,382,5,8898,0,0,382,128,1,0,0,0,383,
        384,5,8896,0,0,384,130,1,0,0,0,385,386,5,8897,0,0,386,132,1,0,0,
        0,387,388,5,215,0,0,388,134,1,0,0,0,389,394,3,147,73,0,390,393,3,
        147,73,0,391,393,3,143,71,0,392,390,1,0,0,0,392,391,1,0,0,0,393,
        396,1,0,0,0,394,392,1,0,0,0,394,395,1,0,0,0,395,136,1,0,0,0,396,
        394,1,0,0,0,397,399,3,141,70,0,398,397,1,0,0,0,398,399,1,0,0,0,399,
        401,1,0,0,0,400,402,3,143,71,0,401,400,1,0,0,0,402,403,1,0,0,0,403,
        401,1,0,0,0,403,404,1,0,0,0,404,405,1,0,0,0,405,407,5,46,0,0,406,
        408,3,143,71,0,407,406,1,0,0,0,408,409,1,0,0,0,409,407,1,0,0,0,409,
        410,1,0,0,0,410,138,1,0,0,0,411,413,3,141,70,0,412,411,1,0,0,0,412,
        413,1,0,0,0,413,414,1,0,0,0,414,418,3,145,72,0,415,417,3,143,71,
        0,416,415,1,0,0,0,417,420,1,0,0,0,418,416,1,0,0,0,418,419,1,0,0,
        0,419,423,1,0,0,0,420,418,1,0,0,0,421,423,5,48,0,0,422,412,1,0,0,
        0,422,421,1,0,0,0,423,140,1,0,0,0,424,425,7,11,0,0,425,142,1,0,0,
        0,426,427,7,12,0,0,427,144,1,0,0,0,428,429,7,13,0,0,429,146,1,0,
        0,0,430,431,7,14,0,0,431,148,1,0,0,0,432,433,5,45,0,0,433,434,5,
        45,0,0,434,438,1,0,0,0,435,437,8,15,0,0,436,435,1,0,0,0,437,440,
        1,0,0,0,438,436,1,0,0,0,438,439,1,0,0,0,439,441,1,0,0,0,440,438,
        1,0,0,0,441,442,6,74,0,0,442,150,1,0,0,0,443,445,7,16,0,0,444,443,
        1,0,0,0,445,446,1,0,0,0,446,444,1,0,0,0,446,447,1,0,0,0,447,448,
        1,0,0,0,448,449,6,75,1,0,449,152,1,0,0,0,32,0,194,227,232,238,243,
        249,260,273,289,294,299,324,327,330,335,338,341,344,347,356,365,
        392,394,398,403,409,412,418,422,438,446,2,6,0,0,0,1,0
    ]

class C2POLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    BASE_TYPE = 15
    KW_VAR = 16
    KW_DEF = 17
    KW_SPEC = 18
    KW_ORDER = 19
    KW_SET = 20
    LOG_NEG = 21
    LOG_AND = 22
    LOG_OR = 23
    LOG_XOR = 24
    LOG_IMPL = 25
    LOG_IFF = 26
    TRUE = 27
    FALSE = 28
    BW_NEG = 29
    BW_AND = 30
    BW_OR = 31
    BW_XOR = 32
    REL_EQ = 33
    REL_NEQ = 34
    REL_GTE = 35
    REL_LTE = 36
    REL_GT = 37
    REL_LT = 38
    ARITH_ADD = 39
    ARITH_SUB = 40
    ARITH_MUL = 41
    ARITH_DIV = 42
    ARITH_MOD = 43
    ARITH_POW = 44
    ARITH_SQRT = 45
    ARITH_PM = 46
    TL_GLOBAL = 47
    TL_FUTURE = 48
    TL_NEXT = 49
    TL_SINCE = 50
    TL_ONCE = 51
    TL_UNTIL = 52
    TL_RELEASE = 53
    TL_HISTORICAL = 54
    FO_FORALL = 55
    FO_EXISTS = 56
    SW_EMPTY_SET = 57
    SW_MEMBER = 58
    SW_SUBSET = 59
    SW_SUBSETEQ = 60
    SW_SUM = 61
    SW_PROD = 62
    SW_UNION = 63
    SW_INTERSECTION = 64
    SW_AND = 65
    SW_OR = 66
    SW_CTPROD = 67
    IDENTIFIER = 68
    FLOAT = 69
    INT = 70
    COMMENT = 71
    WS = 72

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "','", "':'", "';'", "'\\u27E8'", "'\\u27E9'", "'='", "'=>'", 
            "'('", "')'", "'?'", "'{'", "'}'", "'['", "']'", "'VAR'", "'DEFINE'", 
            "'SPEC'", "'Order'", "'set'", "'~'", "'&'", "'|'", "'^'", "'=='", 
            "'>'", "'<'", "'+'", "'-'", "'%'", "'**'", "'\\u221A'", "'\\u2205'", 
            "'\\u2208'", "'\\u2282'", "'\\u2286'", "'\\u2211'", "'\\u220F'", 
            "'\\u22C3'", "'\\u22C2'", "'\\u22C0'", "'\\u22C1'", "'\\u00D7'" ]

    symbolicNames = [ "<INVALID>",
            "BASE_TYPE", "KW_VAR", "KW_DEF", "KW_SPEC", "KW_ORDER", "KW_SET", 
            "LOG_NEG", "LOG_AND", "LOG_OR", "LOG_XOR", "LOG_IMPL", "LOG_IFF", 
            "TRUE", "FALSE", "BW_NEG", "BW_AND", "BW_OR", "BW_XOR", "REL_EQ", 
            "REL_NEQ", "REL_GTE", "REL_LTE", "REL_GT", "REL_LT", "ARITH_ADD", 
            "ARITH_SUB", "ARITH_MUL", "ARITH_DIV", "ARITH_MOD", "ARITH_POW", 
            "ARITH_SQRT", "ARITH_PM", "TL_GLOBAL", "TL_FUTURE", "TL_NEXT", 
            "TL_SINCE", "TL_ONCE", "TL_UNTIL", "TL_RELEASE", "TL_HISTORICAL", 
            "FO_FORALL", "FO_EXISTS", "SW_EMPTY_SET", "SW_MEMBER", "SW_SUBSET", 
            "SW_SUBSETEQ", "SW_SUM", "SW_PROD", "SW_UNION", "SW_INTERSECTION", 
            "SW_AND", "SW_OR", "SW_CTPROD", "IDENTIFIER", "FLOAT", "INT", 
            "COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "BASE_TYPE", "KW_VAR", "KW_DEF", "KW_SPEC", "KW_ORDER", 
                  "KW_SET", "LOG_NEG", "LOG_AND", "LOG_OR", "LOG_XOR", "LOG_IMPL", 
                  "LOG_IFF", "TRUE", "FALSE", "BW_NEG", "BW_AND", "BW_OR", 
                  "BW_XOR", "REL_EQ", "REL_NEQ", "REL_GTE", "REL_LTE", "REL_GT", 
                  "REL_LT", "ARITH_ADD", "ARITH_SUB", "ARITH_MUL", "ARITH_DIV", 
                  "ARITH_MOD", "ARITH_POW", "ARITH_SQRT", "ARITH_PM", "TL_GLOBAL", 
                  "TL_FUTURE", "TL_NEXT", "TL_SINCE", "TL_ONCE", "TL_UNTIL", 
                  "TL_RELEASE", "TL_HISTORICAL", "FO_FORALL", "FO_EXISTS", 
                  "SW_EMPTY_SET", "SW_MEMBER", "SW_SUBSET", "SW_SUBSETEQ", 
                  "SW_SUM", "SW_PROD", "SW_UNION", "SW_INTERSECTION", "SW_AND", 
                  "SW_OR", "SW_CTPROD", "IDENTIFIER", "FLOAT", "INT", "SIGN", 
                  "DIGIT", "NONZERODIGIT", "LETTER", "COMMENT", "WS" ]

    grammarFileName = "C2PO.g"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


